1 - virtualenv trydjango110 -p python
Você criou de novo o ambiente
.\Scripts\activate

2 - 
pip install --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host files.pythonhosted.org django=3.0

3 - Como administrador
pip install --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host files.pythonhosted.org --upgrade pip

4 - django-admin startproject mysite

5 - iniciando o servidor 
$ python manage.py runserver
outros meios:
python manage.py runserver 8080 -- inicia na porta 8080
python manage.py runserver 0:8000
Obs: 0 é um atalho para 0.0.0.0

NOTA:
Projects vs. apps

What’s the difference between a project and an app? An app is a Web application that does something – e.g., a Weblog system, a database of public records or a small poll app. A project is a collection of configuration and apps for a particular website. A project can contain multiple apps. An app can be in multiple projects.

6 - Criando uma app 
python manage.py startapp polls

NOTA:
This is the simplest view possible in Django. To call the view, we need to map it to a URL - and for this we need a URLconf.

To create a URLconf in the polls directory, create a file called urls.py

polls/urls.py

The next step is to point the root URLconf at the polls.urls module. 
In mysite/urls.py, add an import for django.urls.include and insert an include() in the urlpatterns list, so you have:

mysite/urls.py

TUTORIAL 1 FINALIZADO

7 - Começando o tutorial 2
instalar o sqlite command line (https://sqlite.org/cli.html)
cd mysite
sqlite3 db.sqlite3

8 - Criando o modelo (polls/models.py)

python manage.py makemigrations polls

Basicamente, é fazer tudo isso:
Change your models (in models.py).
Run python manage.py makemigrations to create migrations for those changes
Run python manage.py migrate to apply those changes to the database.

9 - Fazendo o shell:
python manage.py shell

>>> from polls.models import Choice, Question  # Import the model classes we just wrote.

# No questions are in the system yet.
>>> Question.objects.all()
<QuerySet []>

# Create a new Question.
# Support for time zones is enabled in the default settings file, so
# Django expects a datetime with tzinfo for pub_date. Use timezone.now()
# instead of datetime.datetime.now() and it will do the right thing.
>>> from django.utils import timezone
>>> q = Question(question_text="What's new?", pub_date=timezone.now())

# Save the object into the database. You have to call save() explicitly.
>>> q.save()

# Now it has an ID.
>>> q.id
1

# Access model field values via Python attributes.
>>> q.question_text
"What's new?"
>>> q.pub_date
datetime.datetime(2012, 2, 26, 13, 0, 0, 775217, tzinfo=<UTC>)

# Change values by changing the attributes, then calling save().
>>> q.question_text = "What's up?"
>>> q.save()

# objects.all() displays all the questions in the database.
>>> Question.objects.all()
<QuerySet [<Question: Question object (1)>]>

10 - Creating an admin user¶
First we’ll need to create a user who can login to the admin site. Run the following command:

$ python manage.py createsuperuser




